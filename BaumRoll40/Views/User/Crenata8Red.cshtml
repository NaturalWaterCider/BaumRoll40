@model BaumRoll40.Models.UserViewModel


@using (Html.BeginForm("Crenata8Red", "User", FormMethod.Post, new { id = "Crenata8RedForm" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal container mt-2">
    <h5>アカウント作成</h5>
    <p class="text-muted">迷子なのですか？</p>

    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(model => model.UserId, htmlAttributes: new { @class = "control-label col" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.UserId, new { htmlAttributes = new { @class = "form-control col-6", maxlength = "7" } })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control col-6", maxlength = "20" } })
        </div>
    </div>

    <div class="form-group">
        <label for="NewPassword1" class="control-label col">ぱすわーど</label>
        <div class="col-md-10">
            @Html.PasswordFor(model => model.NewPassword1, new { @class = "form-control col-6", maxlength = "20" })
        </div>
    </div>

    <div class="form-group">
        <label for="NewPassword2" class="control-label col">ぱすわーど(確認)</label>
        <div class="col-md-10">
            @Html.PasswordFor(model => model.NewPassword2, new { @class = "form-control col-6", maxlength = "20" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" id="send" value="保存" class="btn btn-primary" />
        </div>
    </div>
</div>
}

@section Scripts{

    <script type="text/javascript">
        //BootstrapValidator利用
        $(document).ready(function () {
            $('#Crenata8RedForm').bootstrapValidator({
                message: 'This value is not valid',
                feedbackIcons: {
                    valid: 'glyphicon glyphicon-ok',
                    invalid: 'glyphicon glyphicon-remove',
                    validating: 'glyphicon glyphicon-refresh'
                },
                fields: {
                    UserId: {
                        message: 'The userid is not valid',
                        validators: {
                            notEmpty: {
                                message: '入力必須です！<br>'
                            },
                            stringLength: {
                                min: 0,
                                max: 7,
                                message: '7桁以内にしてください！<br>'
                            },
                            regexp: {
                                regexp: /^[0-9]+$/,
                                message: '数字のみ入力可能です！<br>'
                            }
                        }
                    },
                    UserName: {
                        message: 'The password is not valid',
                        validators: {
                            notEmpty: {
                                message: '入力必須です！<br>'
                            },
                            stringLength: {
                                min: 0,
                                max: 20,
                                message: '20桁以内にしてください！<br>'
                            }
                        }
                    },
                    NewPassword1: {
                        message: 'The password is not valid',
                        validators: {
                            notEmpty: {
                                message: '入力必須です！<br>'
                            },
                            stringLength: {
                                min: 0,
                                max: 20,
                                message: '20桁以内にしてください！<br>'
                            }
                        }
                    },
                    NewPassword2: {
                        message: 'The password is not valid',
                        validators: {
                            notEmpty: {
                                message: '入力必須です！<br>'
                            },
                            stringLength: {
                                min: 0,
                                max: 20,
                                message: '20桁以内にしてください！<br>'
                            }
                        }
                    }
                }
            });
        });
    </script>
}